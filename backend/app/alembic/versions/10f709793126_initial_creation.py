"""Initial creation

Revision ID: 10f709793126
Revises:
Create Date: 2024-10-15 20:37:13.031448

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "10f709793126"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dataset",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("url", sa.String(length=1000), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hyperparameter_type",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("param_name", sa.String(length=100), nullable=False),
        sa.Column("param_type", sa.String(length=100), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "image_registry",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("train_image_name", sa.String(length=300), nullable=False),
        sa.Column("train_description", sa.String(length=500), nullable=True),
        sa.Column("train_harbor_url", sa.String(length=1000), nullable=False),
        sa.Column("train_tag", sa.String(length=100), nullable=False),
        sa.Column("train_size", sa.Integer(), nullable=False),
        sa.Column("train_sha256_hash", sa.String(length=256), nullable=False),
        sa.Column("train_base_image", sa.String(length=300), nullable=False),
        sa.Column("var_image_name", sa.String(length=300), nullable=False),
        sa.Column("var_description", sa.String(length=500), nullable=True),
        sa.Column("var_harbor_url", sa.String(length=1000), nullable=False),
        sa.Column("var_tag", sa.String(length=100), nullable=False),
        sa.Column("var_size", sa.Integer(), nullable=False),
        sa.Column("var_sha256_hash", sa.String(length=256), nullable=False),
        sa.Column("var_base_image", sa.String(length=300), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_format",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_provider",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("link", sa.String(length=256), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_type",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("model_provider_id", sa.Integer(), nullable=False),
        sa.Column("model_type_id", sa.Integer(), nullable=False),
        sa.Column("model_format_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["model_format_id"],
            ["model_format.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_provider_id"],
            ["model_provider.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_type_id"],
            ["model_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "experiment",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("image_registry_id", sa.BigInteger(), nullable=False),
        sa.Column("run_id", sa.String(length=100), nullable=False),
        sa.Column("start_time", sa.TIMESTAMP(), nullable=True),
        sa.Column("end_time", sa.TIMESTAMP(), nullable=True),
        sa.Column("status", sa.String(length=2), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["image_registry_id"],
            ["image_registry.id"],
        ),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["model.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_registry",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("run_id", sa.String(length=255), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("artifact_path", sa.String(length=1024), nullable=False),
        sa.Column("model_uri", sa.String(length=1024), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(["model_id"], ["model.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "experiment_log",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("experiment_id", sa.BigInteger(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hyperparameter",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("experiment_id", sa.BigInteger(), nullable=False),
        sa.Column("param_type_id", sa.BigInteger(), nullable=False),
        sa.Column("param_value", sa.String(length=1000), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["param_type_id"],
            ["hyperparameter_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "metric",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("experiment_id", sa.BigInteger(), nullable=False),
        sa.Column("metric_name", sa.String(length=100), nullable=False),
        sa.Column("metric_value", sa.Float(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "resource_usage",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("experiment_id", sa.BigInteger(), nullable=False),
        sa.Column("cpu_usage", sa.Float(), nullable=False),
        sa.Column("memory_usage", sa.Float(), nullable=False),
        sa.Column("gpu_usage", sa.Float(), nullable=False),
        sa.Column("gpu_memory_usage", sa.Float(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=40), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by", sa.String(length=40), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("deleted_by", sa.String(length=40), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("resource_usage")
    op.drop_table("metric")
    op.drop_table("hyperparameter")
    op.drop_table("experiment_log")
    op.drop_table("model_registry")
    op.drop_table("experiment")
    op.drop_table("model")
    op.drop_table("model_type")
    op.drop_table("model_provider")
    op.drop_table("model_format")
    op.drop_table("image_registry")
    op.drop_table("hyperparameter_type")
    op.drop_table("dataset")
    # ### end Alembic commands ###
